{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prabhanshu Kumar Jha\\\\Desktop\\\\Code\\\\Hardhat\\\\my-hardhat-project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [explorer, setExplorer] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      alert(\"MetaMask not detected!\");\n      return;\n    }\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setAccount(accounts[0]);\n    } catch (err) {\n      console.error(\"Wallet connection error:\", err);\n    }\n  };\n  const handleUpload = async file => {\n    if (!account) {\n      alert(\"Please connect wallet first\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"account\", account); // Optional: send wallet address to backend\n\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      setStatus(data.status);\n      setExplorer(data.explorer);\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"Upload failed. See console for details.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Deepfake Detection Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: account ? `Connected: ${account.slice(0, 6)}...${account.slice(-4)}` : \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"video/*,image/*\",\n        onChange: e => handleUpload(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Processing... \\u23F3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 18\n    }, this), explorer && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: explorer,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"View Transaction on Blockchain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eRNgYZwLiuc0W1fJmMdq7i1bKq0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ethers","jsxDEV","_jsxDEV","App","_s","account","setAccount","status","setStatus","explorer","setExplorer","loading","setLoading","connectWallet","window","ethereum","alert","provider","BrowserProvider","accounts","send","err","console","error","handleUpload","file","formData","FormData","append","response","fetch","method","body","data","json","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","slice","marginTop","type","accept","onChange","e","target","files","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/Prabhanshu Kumar Jha/Desktop/Code/Hardhat/my-hardhat-project/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nfunction App() {\n  const [account, setAccount] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [explorer, setExplorer] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      alert(\"MetaMask not detected!\");\n      return;\n    }\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setAccount(accounts[0]);\n    } catch (err) {\n      console.error(\"Wallet connection error:\", err);\n    }\n  };\n\n  const handleUpload = async (file) => {\n    if (!account) {\n      alert(\"Please connect wallet first\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"account\", account); // Optional: send wallet address to backend\n\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      const data = await response.json();\n      setStatus(data.status);\n      setExplorer(data.explorer);\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"Upload failed. See console for details.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"2rem\", fontFamily: \"Arial\" }}>\n      <h2>Deepfake Detection Upload</h2>\n\n      <button onClick={connectWallet}>\n        {account ? `Connected: ${account.slice(0, 6)}...${account.slice(-4)}` : \"Connect Wallet\"}\n      </button>\n\n      <div style={{ marginTop: \"1rem\" }}>\n        <input\n          type=\"file\"\n          accept=\"video/*,image/*\"\n          onChange={(e) => handleUpload(e.target.files[0])}\n        />\n      </div>\n\n      {loading && <p>Processing... ‚è≥</p>}\n      {status && <p>Status: <strong>{status}</strong></p>}\n      {explorer && (\n        <p>\n          <a href={explorer} target=\"_blank\" rel=\"noopener noreferrer\">\n            View Transaction on Blockchain\n          </a>\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prabhanshu Kumar Jha\\\\Desktop\\\\Code\\\\Hardhat\\\\my-hardhat-project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserProvider } from \"ethers\"; // Ethers.js v6 import\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const connectWallet = async () => {\n    try {\n      if (!window.ethereum) {\n        alert(\"MetaMask is not installed. Please install it to use this app.\");\n        return;\n      }\n\n      // Request account access\n      await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n\n      // Create a provider using MetaMask\n      const provider = new BrowserProvider(window.ethereum);\n\n      // Get the signer (wallet) from provider\n      const signer = await provider.getSigner();\n\n      // Get the user's wallet address\n      const address = await signer.getAddress();\n      setWalletAddress(address);\n    } catch (err) {\n      console.error(\"Error connecting to MetaMask:\", err);\n    }\n  };\n  useEffect(() => {\n    connectWallet();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83E\\uDD8A MetaMask Wallet Connector\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), walletAddress ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected wallet: \", walletAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Connecting to MetaMask...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HFxa1QVQVyclsfvcg8aUeqgFss0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserProvider","jsxDEV","_jsxDEV","App","_s","walletAddress","setWalletAddress","connectWallet","window","ethereum","alert","request","method","provider","signer","getSigner","address","getAddress","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Prabhanshu Kumar Jha/Desktop/Code/Hardhat/my-hardhat-project/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserProvider } from \"ethers\"; // Ethers.js v6 import\nimport \"./App.css\";\n\nfunction App() {\n  const [walletAddress, setWalletAddress] = useState(\"\");\n\n  const connectWallet = async () => {\n    try {\n      if (!window.ethereum) {\n        alert(\"MetaMask is not installed. Please install it to use this app.\");\n        return;\n      }\n\n      // Request account access\n      await window.ethereum.request({ method: \"eth_requestAccounts\" });\n\n      // Create a provider using MetaMask\n      const provider = new BrowserProvider(window.ethereum);\n\n      // Get the signer (wallet) from provider\n      const signer = await provider.getSigner();\n\n      // Get the user's wallet address\n      const address = await signer.getAddress();\n      setWalletAddress(address);\n    } catch (err) {\n      console.error(\"Error connecting to MetaMask:\", err);\n    }\n  };\n\n  useEffect(() => {\n    connectWallet();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>ðŸ¦Š MetaMask Wallet Connector</h1>\n        {walletAddress ? (\n          <p>Connected wallet: {walletAddress}</p>\n        ) : (\n          <p>Connecting to MetaMask...</p>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,QAAQ,CAAC,CAAC;AAC1C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE;QACpBC,KAAK,CAAC,+DAA+D,CAAC;QACtE;MACF;;MAEA;MACA,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;;MAEhE;MACA,MAAMC,QAAQ,GAAG,IAAIb,eAAe,CAACQ,MAAM,CAACC,QAAQ,CAAC;;MAErD;MACA,MAAMK,MAAM,GAAG,MAAMD,QAAQ,CAACE,SAAS,CAAC,CAAC;;MAEzC;MACA,MAAMC,OAAO,GAAG,MAAMF,MAAM,CAACG,UAAU,CAAC,CAAC;MACzCX,gBAAgB,CAACU,OAAO,CAAC;IAC3B,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC;IACrD;EACF,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACdS,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBpB,OAAA;MAAQmB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BpB,OAAA;QAAAoB,QAAA,EAAI;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpCrB,aAAa,gBACZH,OAAA;QAAAoB,QAAA,GAAG,oBAAkB,EAACjB,aAAa;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,gBAExCxB,OAAA;QAAAoB,QAAA,EAAG;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAChC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACtB,EAAA,CA3CQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}